Q1. Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.

def twoSum(nums, target):
    complements = {}

    for i, num in enumerate(nums):
        if num in complements:
            return [complements[num], i]
        complements[target - num] = i

    return []

Q2. Given an integer array nums and an integer val, remove all occurrences of val in nums in-place. The order of the elements may be changed. Then return the number of elements in nums which are not equal to val.

def removeElement(nums, val):
    i = 0
    j = 0
    while i < len(nums):
        if nums[i] != val:
            nums[j] = nums[i]
            j += 1
        i += 1
    return j

nums = [3, 2, 2, 3]
val = 3
result = removeElement(nums, val)
print(result)  
print(nums)    


Q3. Given a sorted array of distinct integers and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.

nums = [1, 3, 5, 6]
target = 5
result = searchInsert(nums, target)
print(result)  

target = 2
result = searchInsert(nums, target)
print(result) 

target = 7
result = searchInsert(nums, target)
print(result)  


Q4. You are given a large integer represented as an integer array digits, where each digits[i] is the ith digit of the integer. The digits are ordered from most significant to least significant in left-to-right order. The large integer does not contain any leading 0's.

def addOne(digits):
    n = len(digits)
    carry = 1

    for i in range(n - 1, -1, -1):
        digits[i] += carry
        carry = digits[i] // 10
        digits[i] %= 10

    if carry:
        digits.insert(0, carry)

    return digits


Q5. You are given two integer arrays nums1 and nums2, sorted in non-decreasing order, and two integers m and n, representing the number of elements in nums1 and nums2 respectively.

nums1 = [1, 3, 5]
m = 3
nums2 = [2, 4, 6]
n = 3
result = merge(nums1, m, nums2, n)
print(result)  

Output: [1, 2, 3, 4, 5, 6]


Q6.Given an integer array nums, return true if any value appears at least twice in the array, and return false if every element is distinct.

nums = [1, 2, 3, 1]
result = containsDuplicate(nums)
print(result) 

 Output: True

nums = [1, 2, 3, 4]
result = containsDuplicate(nums)
print(result)  

 Output: False 

Q7. Given an integer array nums, move all 0's to the end of it while maintaining the relative order of the nonzero elements.

nums = [0, 1, 0, 3, 12]
moveZeroes(nums)
print(nums)  

 Output: [1, 3, 12, 0, 0]

Q8. You have a set of integers s, which originally contains all the numbers from 1 to n. Unfortunately, due to some error, one of the numbers in s got duplicated to another number in the set, which results in repetition of one number and loss of another number.

nums = [1, 2, 2, 4]
result = findErrorNums(nums)
print(result)  

 Output: [2, 3]








